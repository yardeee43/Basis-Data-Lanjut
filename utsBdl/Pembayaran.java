/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.utsBdl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author bachtiar
 */
public class Pembayaran extends javax.swing.JFrame {

    Connection conn;
    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/Dollah";
    String user = "postgres";
    String password = "yarde";

    private String idpemesanan() {
        String idPemesanan = null;

//        konek();
        try {
            String sql = "select id_pemesanan from pemesanan where id_pelanggan = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, lblId.getText());
            ResultSet res = ps.executeQuery();
            while (res.next()) {
                idPemesanan = res.getString("id_pemesanan");
            }
        } catch (SQLException e) {
        }
        return idPemesanan;
    }

    private String idjenis() {
        String idPemesanan = null;

//        konek();
        try {
            String sql = "select id_jenis_pembayaran from nama_jenis_pembayaran where nama_jenis_pembayaran= ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, metodeCb.getSelectedItem().toString());
            ResultSet res = ps.executeQuery();
            while (res.next()) {
                idPemesanan = res.getString("id_jenis_pembayaran");
            }
        } catch (SQLException e) {
        }
        return idPemesanan;
    }

    private String generateNewId(Connection conn) throws SQLException {
        String newId = "BUY0001";  // ID awal jika belum ada data

// Query untuk mendapatkan ID pembayaran terakhir
        String sql = "SELECT id_pembayaran FROM pembayaran ORDER BY id_pembayaran DESC LIMIT 1";
        try (PreparedStatement statement = conn.prepareStatement(sql); ResultSet resultSet = statement.executeQuery()) {

            if (resultSet.next()) {
                String lastId = resultSet.getString("id_pembayaran");
                System.out.println("ID terakhir dari database: '" + lastId + "'");  // Logging ID terakhir

                if (lastId != null && lastId.length() >= 4) {
                    lastId = lastId.trim(); // Menghapus spasi di awal dan akhir
                    String prefix = lastId.substring(0, 3); // Ambil awalan ID (misal: "BUY")
                    try {
                        int lastIdNumber = Integer.parseInt(lastId.substring(3));  // Ambil angka dari ID terakhir
                        lastIdNumber++;  // Increment ID
                        newId = prefix + String.format("%04d", lastIdNumber); // Format ke ID baru dengan awalan yang sama
                    } catch (NumberFormatException e) {
                        System.out.println("Format ID tidak valid: " + lastId);
                        e.printStackTrace();
                    }
                } else {
                    System.out.println("ID terakhir tidak valid: " + lastId);
                }
            } else {
                System.out.println("Tidak ada ID pemesanan yang ditemukan, menggunakan ID default.");
            }
        }

        return newId;

    }

    public void konek() {

        try {
            Class.forName(driver);
            conn = DriverManager.getConnection(koneksi, user, password);

        } catch (Exception e) {
        }
    }

    public void metode() {
        try {
//            konek();
            String sql = "select nama_jenis_pembayaran from nama_jenis_pembayaran order by id_jenis_pembayaran asc";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet res = ps.executeQuery();
            while (res.next()) {
                String metode = res.getString("nama_jenis_pembayaran");
                metodeCb.addItem(metode);
            }
        } catch (Exception e) {
        }
    }

    /**
     * Creates new form pembayaran
     */
    public Pembayaran() {
        initComponents();
        konek();
        metode();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        namaLblp = new javax.swing.JLabel();
        totalLbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        metodeCb = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        bayarBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pembayaran");

        namaLblp.setText("-");

        totalLbl.setText("-");

        jLabel4.setText("ID");

        jLabel5.setText("Nama");

        jLabel6.setText("Total yang harus dibayar");

        metodeCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodeCbActionPerformed(evt);
            }
        });

        jLabel7.setText("Metode");

        bayarBtn.setText("Bayar");
        bayarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblId.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bayarBtn)
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addContainerGap(167, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(metodeCb, 0, 170, Short.MAX_VALUE)
                            .addComponent(namaLblp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblId))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaLblp)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalLbl)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metodeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(bayarBtn)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bayarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarBtnActionPerformed
        // TODO add your handling code here:
        int akhir = Integer.parseInt(totalLbl.getText());
        Pemesanan f = new Pemesanan();
        int totalS = Integer.parseInt(totalLbl.getText());
        if (totalS == 0) {
            JOptionPane.showMessageDialog(this, "tidak ada yang harus dibayar");
        } else {
            try {

                int response = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin melanjutkan pembayaran?", "Konfirmasi Pembayaran", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
//            conn = DriverManager.getConnection(koneksi, user, password);
                conn.setAutoCommit(false);

                if (response == JOptionPane.YES_OPTION) {
                    String idJ = idjenis();
                    String id = idpemesanan();
                    String idP = generateNewId(conn);

                    String query = "INSERT INTO pembayaran (id_pembayaran, id_pemesanan, id_jenis_pembayaran, metode_pembayaran,total_pembayaran) VALUES ( ?, ?, ?, ?, ?)";
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.setString(1, idP);
                    ps.setString(2, id);
                    ps.setString(3, idJ);
                    ps.setString(4, metodeCb.getSelectedItem().toString());
                    ps.setInt(5, akhir);

                    // Eksekusi update
                    ps.executeUpdate();
//                    conn.commit();
                    JOptionPane.showMessageDialog(this, "pembayaran berhasil");

//                    f.setStatusPembayaran(true);

//                this.dispose();
                } else {
//                    conn.rollback();
//                    f.setStatusPembayaran(false);
//                    .showMessageDialog(this, "pembayaran dibatalkan");
                }
            } catch (Exception e) {
                System.out.println(e.getMessage());
            } finally {
            }
            if (conn != null) {
                try {

                    conn.close();
                    this.dispose();
                } catch (SQLException ex) {
                    Logger.getLogger(Pembayaran.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

        }

    }//GEN-LAST:event_bayarBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Pemesanan frame = new Pemesanan();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void metodeCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodeCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_metodeCbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pembayaran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pembayaran().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bayarBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JLabel lblId;
    private javax.swing.JComboBox<String> metodeCb;
    public javax.swing.JLabel namaLblp;
    public javax.swing.JLabel totalLbl;
    // End of variables declaration//GEN-END:variables
}
